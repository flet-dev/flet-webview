{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":""},{"location":"#flet-webview","title":"flet-webview","text":"<p>A Flet extension for displaying web content in a WebView.</p> <p>It is based on the webview_flutter and webview_flutter_web Flutter packages.</p>"},{"location":"#platform-support","title":"Platform Support","text":"<p>This package supports the following platforms:</p> Platform Supported Windows \u274c macOS \u2705 Linux \u274c iOS \u2705 Android \u2705 Web \u2705"},{"location":"#usage","title":"Usage","text":""},{"location":"#installation","title":"Installation","text":"<p>To install the <code>flet-webview</code> package and add it to your project dependencies:</p> uvpippoetry <pre><code>uv add flet-webview\n</code></pre> <pre><code>pip install flet-webview  # (1)!\n</code></pre> <ol> <li>After this, you will have to manually add this package to your <code>requirements.txt</code> or <code>pyproject.toml</code>.</li> </ol> <pre><code>poetry add flet-webview\n</code></pre>"},{"location":"#examples","title":"Examples","text":"<p>See these.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#020-2025-06-26","title":"0.2.0 - 2025-06-26","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Deployed online documentation: https://flet-dev.github.io/flet-webview/</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Refactored all controls to use <code>@flet.control</code> dataclass-style definition. </li> </ul>"},{"location":"changelog/#010-2025-01-15","title":"0.1.0 - 2025-01-15","text":"<p>Initial release.</p>"},{"location":"license/","title":"License","text":"<pre><code>                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</code></pre>"},{"location":"webview/","title":"WebView","text":""},{"location":"webview/#examples","title":"Examples","text":""},{"location":"webview/#example-1","title":"Example 1","text":"example_1.py<pre><code>import flet as ft\n\nimport flet_webview as fwv\n\n\ndef main(page: ft.Page):\n    page.add(\n        fwv.WebView(\n            url=\"https://flet.dev\",\n            on_page_started=lambda _: print(\"Page started\"),\n            on_page_ended=lambda _: print(\"Page ended\"),\n            on_web_resource_error=lambda e: print(\"WebView error:\", e.data),\n            expand=True,\n        )\n    )\n\n\nft.run(main)\n</code></pre>"},{"location":"webview/#flet_webview.webview.WebView","title":"WebView","text":"<p>               Bases: <code>ConstrainedControl</code></p> <p>Easily load webpages while allowing user interaction.</p> Note <p>Works only on the following platforms: iOS, Android, macOS and Web.</p>"},{"location":"webview/#flet_webview.webview.WebView.align","title":"align","text":"<pre><code>align: Alignment | None = None\n</code></pre> <p>Alignment of the control within its parent.</p>"},{"location":"webview/#flet_webview.webview.WebView.animate_align","title":"animate_align","text":"<pre><code>animate_align: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>align</code> property.</p> <p>More information here.</p>"},{"location":"webview/#flet_webview.webview.WebView.animate_margin","title":"animate_margin","text":"<pre><code>animate_margin: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>margin</code> property.</p> <p>More information here.</p>"},{"location":"webview/#flet_webview.webview.WebView.animate_offset","title":"animate_offset","text":"<pre><code>animate_offset: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>offset</code> property.</p> <p>More information here.</p>"},{"location":"webview/#flet_webview.webview.WebView.animate_opacity","title":"animate_opacity","text":"<pre><code>animate_opacity: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>opacity</code> property.</p> <p>More information here.</p>"},{"location":"webview/#flet_webview.webview.WebView.animate_position","title":"animate_position","text":"<pre><code>animate_position: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the positioning properties (<code>left</code>, <code>right</code>, <code>top</code> and <code>bottom</code>).</p> <p>More information here.</p>"},{"location":"webview/#flet_webview.webview.WebView.animate_rotation","title":"animate_rotation","text":"<pre><code>animate_rotation: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>rotate</code> property.</p> <p>More information here.</p>"},{"location":"webview/#flet_webview.webview.WebView.animate_scale","title":"animate_scale","text":"<pre><code>animate_scale: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>scale</code> property.</p> <p>More information here.</p>"},{"location":"webview/#flet_webview.webview.WebView.animate_size","title":"animate_size","text":"<pre><code>animate_size: AnimationValue | None = None\n</code></pre> <p>TBD</p>"},{"location":"webview/#flet_webview.webview.WebView.aspect_ratio","title":"aspect_ratio","text":"<pre><code>aspect_ratio: Number | None = None\n</code></pre> <p>TBD</p>"},{"location":"webview/#flet_webview.webview.WebView.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"webview/#flet_webview.webview.WebView.bgcolor","title":"bgcolor","text":"<pre><code>bgcolor: ColorValue | None = None\n</code></pre> <p>Defines the background color of the WebView.</p>"},{"location":"webview/#flet_webview.webview.WebView.bottom","title":"bottom","text":"<pre><code>bottom: Number | None = None\n</code></pre> <p>The distance that the child's bottom edge is inset from the bottom of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"webview/#flet_webview.webview.WebView.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"webview/#flet_webview.webview.WebView.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"webview/#flet_webview.webview.WebView.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"webview/#flet_webview.webview.WebView.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"webview/#flet_webview.webview.WebView.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"webview/#flet_webview.webview.WebView.height","title":"height","text":"<pre><code>height: Number | None = None\n</code></pre> <p>Imposed Control height in virtual pixels.</p>"},{"location":"webview/#flet_webview.webview.WebView.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"webview/#flet_webview.webview.WebView.left","title":"left","text":"<pre><code>left: Number | None = None\n</code></pre> <p>The distance that the child's left edge is inset from the left of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"webview/#flet_webview.webview.WebView.margin","title":"margin","text":"<pre><code>margin: MarginValue | None = None\n</code></pre> <p>Sets the margin of the control.</p>"},{"location":"webview/#flet_webview.webview.WebView.offset","title":"offset","text":"<pre><code>offset: OffsetValue | None = None\n</code></pre> <p>Applies a translation transformation before painting the control.</p> <p>The translation is expressed as an <code>Offset</code> scaled to the control's size. So, <code>Offset(x=0.25, y=0)</code>, for example, will result in a horizontal translation of one quarter the width of this control.</p> <p>/// details | Example     type: example The following example displays container at <code>0, 0</code> top left corner of a stack as transform applies <code>-1 * 100, -1 * 100</code> (<code>offset * control's size</code>) horizontal and vertical translations to the control:</p> <p></p><pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.Stack(\n            width=1000,\n            height=1000,\n            controls=[\n                ft.Container(\n                    bgcolor=\"red\",\n                    width=100,\n                    height=100,\n                    left=100,\n                    top=100,\n                    offset=ft.Offset(-1, -1),\n                )\n            ],\n        )\n    )\n\nft.run(main)\n</code></pre> ///<p></p>"},{"location":"webview/#flet_webview.webview.WebView.on_animation_end","title":"on_animation_end","text":"<pre><code>on_animation_end: (\n    ControlEventHandler[LayoutControl] | None\n) = None\n</code></pre> <p>Called when animation completes.</p> <p>Can be used to chain multiple animations.</p> <p>The <code>data</code> property of the event handler argument contains the name of the animation.</p> <p>More information here.</p>"},{"location":"webview/#flet_webview.webview.WebView.on_console_message","title":"on_console_message","text":"<pre><code>on_console_message: (\n    EventHandler[WebViewConsoleMessageEvent] | None\n) = None\n</code></pre> <p>Fires when a log message is written to the JavaScript console.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.on_javascript_alert_dialog","title":"on_javascript_alert_dialog","text":"<pre><code>on_javascript_alert_dialog: (\n    EventHandler[WebViewJavaScriptEvent] | None\n) = None\n</code></pre> <p>Fires when the web page attempts to display a JavaScript alert() dialog.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.on_page_ended","title":"on_page_ended","text":"<pre><code>on_page_ended: ControlEventHandler[WebView] | None = None\n</code></pre> <p>Fires when all the webview page loading processes are ended.</p> <p>Event handler argument's <code>data</code> property is of type <code>str</code> and contains the URL.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.on_page_started","title":"on_page_started","text":"<pre><code>on_page_started: ControlEventHandler[WebView] | None = None\n</code></pre> <p>Fires soon as the first loading process of the webview page is started.</p> <p>Event handler argument's <code>data</code> property is of type <code>str</code> and contains the URL.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.on_progress","title":"on_progress","text":"<pre><code>on_progress: ControlEventHandler[WebView] | None = None\n</code></pre> <p>Fires when the progress of the webview page loading is changed.</p> <p>Event handler argument's <code>data</code> property is of type <code>int</code> and contains the progress value.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.on_scroll","title":"on_scroll","text":"<pre><code>on_scroll: EventHandler[WebViewScrollEvent] | None = None\n</code></pre> <p>Fires when the web page's scroll position changes.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.on_url_change","title":"on_url_change","text":"<pre><code>on_url_change: ControlEventHandler[WebView] | None = None\n</code></pre> <p>Fires when the URL of the webview page is changed.</p> <p>Event handler argument's <code>data</code> property is of type <code>str</code> and contains the new URL.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.on_web_resource_error","title":"on_web_resource_error","text":"<pre><code>on_web_resource_error: (\n    ControlEventHandler[WebView] | None\n) = None\n</code></pre> <p>Fires when there is error with loading a webview page resource.</p> <p>Event handler argument's <code>data</code> property is of type <code>str</code> and contains the error message.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"webview/#flet_webview.webview.WebView.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"webview/#flet_webview.webview.WebView.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"webview/#flet_webview.webview.WebView.prevent_links","title":"prevent_links","text":"<pre><code>prevent_links: list[str] | None = None\n</code></pre> <p>List of url-prefixes that should not be followed/loaded/downloaded.</p>"},{"location":"webview/#flet_webview.webview.WebView.right","title":"right","text":"<pre><code>right: Number | None = None\n</code></pre> <p>The distance that the child's right edge is inset from the right of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"webview/#flet_webview.webview.WebView.rotate","title":"rotate","text":"<pre><code>rotate: RotateValue | None = None\n</code></pre> <p>Transforms this control using a rotation around its center.</p> <p>The value of <code>rotate</code> property could be one of the following types:</p> <ul> <li><code>number</code> - a rotation in clockwise radians. Full circle <code>360\u00b0</code> is <code>math.pi * 2</code> radians, <code>90\u00b0</code> is <code>pi / 2</code>, <code>45\u00b0</code> is <code>pi / 4</code>, etc.</li> <li><code>Rotate</code> - allows to specify rotation <code>angle</code> as well as <code>alignment</code> - the location of rotation center.</li> </ul> <p>/// details | Example     type: example For example: </p><pre><code>ft.Image(\n    src=\"https://picsum.photos/100/100\",\n    width=100,\n    height=100,\n    border_radius=5,\n    rotate=Rotate(angle=0.25 * pi, alignment=ft.Alignment.CENTER_LEFT)\n)\n</code></pre> ///<p></p>"},{"location":"webview/#flet_webview.webview.WebView.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"webview/#flet_webview.webview.WebView.scale","title":"scale","text":"<pre><code>scale: ScaleValue | None = None\n</code></pre> <p>Scales this control along the 2D plane. Default scale factor is <code>1.0</code>, meaning no-scale.</p> <p>Setting this property to <code>0.5</code>, for example, makes this control twice smaller, while <code>2.0</code> makes it twice larger.</p> <p>Different scale multipliers can be specified for <code>x</code> and <code>y</code> axis, by setting <code>Control.scale</code> property to an instance of <code>Scale</code> class. Either <code>scale</code> or <code>scale_x</code> and <code>scale_y</code> could be specified, but not all of them.</p> <p>/// details | Example     type: example </p><pre><code>ft.Image(\n    src=\"https://picsum.photos/100/100\",\n    width=100,\n    height=100,\n    border_radius=5,\n    scale=ft.Scale(scale_x=2, scale_y=0.5)\n)\n</code></pre> ///<p></p>"},{"location":"webview/#flet_webview.webview.WebView.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"webview/#flet_webview.webview.WebView.top","title":"top","text":"<pre><code>top: Number | None = None\n</code></pre> <p>The distance that the child's top edge is inset from the top of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"webview/#flet_webview.webview.WebView.url","title":"url","text":"<pre><code>url: str\n</code></pre> <p>The URL of the web page to load.</p>"},{"location":"webview/#flet_webview.webview.WebView.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"webview/#flet_webview.webview.WebView.width","title":"width","text":"<pre><code>width: Number | None = None\n</code></pre> <p>Imposed Control width in virtual pixels.</p>"},{"location":"webview/#flet_webview.webview.WebView.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"webview/#flet_webview.webview.WebView.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"webview/#flet_webview.webview.WebView.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"webview/#flet_webview.webview.WebView.can_go_back","title":"can_go_back","text":"<pre><code>can_go_back() -&gt; bool\n</code></pre> <p>Whether there's a back history item.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p> RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if there is a back history item, <code>False</code> otherwise.</p>"},{"location":"webview/#flet_webview.webview.WebView.can_go_forward","title":"can_go_forward","text":"<pre><code>can_go_forward() -&gt; bool\n</code></pre> <p>Whether there's a forward history item.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p> RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if there is a forward history item, <code>False</code> otherwise.</p>"},{"location":"webview/#flet_webview.webview.WebView.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"webview/#flet_webview.webview.WebView.clear_cache","title":"clear_cache","text":"<pre><code>clear_cache()\n</code></pre> <p>Clears all caches used by the WebView.</p> The following caches are cleared <ul> <li>Browser HTTP Cache</li> <li>Cache API caches. Service workers tend to use this cache.</li> <li>Application cache</li> </ul> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.clear_local_storage","title":"clear_local_storage","text":"<pre><code>clear_local_storage()\n</code></pre> <p>Clears the local storage used by the WebView.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"webview/#flet_webview.webview.WebView.disable_zoom","title":"disable_zoom","text":"<pre><code>disable_zoom()\n</code></pre> <p>Disables zooming using the on-screen zoom controls and gestures.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.enable_zoom","title":"enable_zoom","text":"<pre><code>enable_zoom()\n</code></pre> <p>Enables zooming using the on-screen zoom controls and gestures.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.get_current_url","title":"get_current_url","text":"<pre><code>get_current_url() -&gt; str | None\n</code></pre> <p>Gets the current URL that the WebView is displaying or <code>None</code> if no URL was ever loaded.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p> RETURNS DESCRIPTION <code>str | None</code> <p>The current URL that the WebView is displaying or <code>None</code> if no URL was ever loaded.</p>"},{"location":"webview/#flet_webview.webview.WebView.get_title","title":"get_title","text":"<pre><code>get_title() -&gt; str | None\n</code></pre> <p>Get the title of the currently loaded page.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p> RETURNS DESCRIPTION <code>str | None</code> <p>The title of the currently loaded page.</p>"},{"location":"webview/#flet_webview.webview.WebView.get_user_agent","title":"get_user_agent","text":"<pre><code>get_user_agent() -&gt; str | None\n</code></pre> <p>Get the value used for the HTTP <code>User-Agent:</code> request header.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p> RETURNS DESCRIPTION <code>str | None</code> <p>The value used for the HTTP <code>User-Agent:</code> request header.</p>"},{"location":"webview/#flet_webview.webview.WebView.go_back","title":"go_back","text":"<pre><code>go_back()\n</code></pre> <p>Goes back in the history of the webview, if <code>can_go_back()</code> is <code>True</code>.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.go_forward","title":"go_forward","text":"<pre><code>go_forward()\n</code></pre> <p>Goes forward in the history of the webview, if <code>can_go_forward()</code> is <code>True</code>.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"webview/#flet_webview.webview.WebView.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"webview/#flet_webview.webview.WebView.load_file","title":"load_file","text":"<pre><code>load_file(path: str)\n</code></pre> <p>Loads the provided local file.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p> PARAMETER DESCRIPTION <code>path</code> <p>The absolute path to the file.</p> <p> TYPE: <code>str</code> </p>"},{"location":"webview/#flet_webview.webview.WebView.load_html","title":"load_html","text":"<pre><code>load_html(value: str, base_url: str | None = None)\n</code></pre> <p>Loads the provided HTML string.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p> PARAMETER DESCRIPTION <code>value</code> <p>The HTML string to load.</p> <p> TYPE: <code>str</code> </p> <code>base_url</code> <p>The base URL to use when resolving relative URLs within the value.</p> <p> TYPE: <code>str | None</code> DEFAULT: <code>None</code> </p>"},{"location":"webview/#flet_webview.webview.WebView.load_request","title":"load_request","text":"<pre><code>load_request(url: str, method: RequestMethod = GET)\n</code></pre> <p>Makes an HTTP request and loads the response in the webview.</p> PARAMETER DESCRIPTION <code>url</code> <p>The URL to load.</p> <p> TYPE: <code>str</code> </p> <code>method</code> <p>The HTTP method to use.</p> <p> TYPE: <code>RequestMethod</code> DEFAULT: <code>GET</code> </p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.reload","title":"reload","text":"<pre><code>reload()\n</code></pre> <p>Reloads the current URL.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.run_javascript","title":"run_javascript","text":"<pre><code>run_javascript(value: str)\n</code></pre> <p>Runs the given JavaScript in the context of the current page.</p> PARAMETER DESCRIPTION <code>value</code> <p>The JavaScript code to run.</p> <p> TYPE: <code>str</code> </p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p>"},{"location":"webview/#flet_webview.webview.WebView.scroll_by","title":"scroll_by","text":"<pre><code>scroll_by(x: int, y: int)\n</code></pre> <p>Scrolls by the provided number of webview pixels.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p> PARAMETER DESCRIPTION <code>x</code> <p>The number of pixels to scroll by on the x-axis.</p> <p> TYPE: <code>int</code> </p> <code>y</code> <p>The number of pixels to scroll by on the y-axis.</p> <p> TYPE: <code>int</code> </p>"},{"location":"webview/#flet_webview.webview.WebView.scroll_to","title":"scroll_to","text":"<pre><code>scroll_to(x: int, y: int)\n</code></pre> <p>Scrolls to the provided position of webview pixels.</p> Note <p>Works only on the following platforms: iOS, Android and macOS.</p> PARAMETER DESCRIPTION <code>x</code> <p>The x-coordinate of the scroll position.</p> <p> TYPE: <code>int</code> </p> <code>y</code> <p>The y-coordinate of the scroll position.</p> <p> TYPE: <code>int</code> </p>"},{"location":"webview/#flet_webview.webview.WebView.set_javascript_mode","title":"set_javascript_mode","text":"<pre><code>set_javascript_mode(mode: JavaScriptMode)\n</code></pre> <p>Sets the JavaScript mode of the WebView.</p> Note <ul> <li>Works only on the following platforms: iOS, Android and macOS.</li> <li>Disabling the JavaScript execution on the page may result to     unexpected web page behaviour.</li> </ul> PARAMETER DESCRIPTION <code>mode</code> <p>The JavaScript mode to set.</p> <p> TYPE: <code>JavaScriptMode</code> </p>"},{"location":"webview/#flet_webview.webview.WebView.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"webview/#flet_webview.webview.WebView.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"types/log_level_severity/","title":"LogLevelSeverity","text":""},{"location":"types/log_level_severity/#flet_webview.types.LogLevelSeverity","title":"<code>LogLevelSeverity</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Represents the severity of a JavaScript log message.</p>"},{"location":"types/log_level_severity/#flet_webview.types.LogLevelSeverity.DEBUG","title":"<code>DEBUG = 'debug'</code>","text":"<p>Indicates a debug message was logged using the <code>console.debug</code> method.</p>"},{"location":"types/log_level_severity/#flet_webview.types.LogLevelSeverity.ERROR","title":"<code>ERROR = 'error'</code>","text":"<p>Indicates an error message was logged via an \"error\" event of the <code>console.error</code> method.</p>"},{"location":"types/log_level_severity/#flet_webview.types.LogLevelSeverity.INFO","title":"<code>INFO = 'info'</code>","text":"<p>Indicates an informational message was logged using the <code>console.info</code> method.</p>"},{"location":"types/log_level_severity/#flet_webview.types.LogLevelSeverity.LOG","title":"<code>LOG = 'log'</code>","text":"<p>Indicates a log message was logged using the <code>console.log</code> method.</p>"},{"location":"types/log_level_severity/#flet_webview.types.LogLevelSeverity.WARNING","title":"<code>WARNING = 'warning'</code>","text":"<p>Indicates a warning message was logged using the <code>console.warning</code> method.</p>"},{"location":"types/request_method/","title":"RequestMethod","text":""},{"location":"types/request_method/#flet_webview.types.RequestMethod","title":"<code>RequestMethod</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Defines the supported HTTP methods for loading a page in a <code>WebView</code>.</p>"},{"location":"types/request_method/#flet_webview.types.RequestMethod.GET","title":"<code>GET = 'get'</code>","text":"<p>HTTP GET method.</p>"},{"location":"types/request_method/#flet_webview.types.RequestMethod.POST","title":"<code>POST = 'post'</code>","text":"<p>HTTP POST method.</p>"},{"location":"types/webview_console_message_event/","title":"WebviewConsoleMessageEvent","text":""},{"location":"types/webview_console_message_event/#flet_webview.types.WebViewConsoleMessageEvent","title":"WebViewConsoleMessageEvent","text":"<p>               Bases: <code>Event['WebView']</code></p>"},{"location":"types/webview_console_message_event/#flet_webview.types.WebViewConsoleMessageEvent.control","title":"control","text":"<pre><code>control: EventControlType = field(repr=False)\n</code></pre>"},{"location":"types/webview_console_message_event/#flet_webview.types.WebViewConsoleMessageEvent.data","title":"data","text":"<pre><code>data: Any | None = field(default=None, kw_only=True)\n</code></pre>"},{"location":"types/webview_console_message_event/#flet_webview.types.WebViewConsoleMessageEvent.message","title":"message","text":"<pre><code>message: str\n</code></pre> <p>The message written to the console.</p>"},{"location":"types/webview_console_message_event/#flet_webview.types.WebViewConsoleMessageEvent.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"types/webview_console_message_event/#flet_webview.types.WebViewConsoleMessageEvent.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre>"},{"location":"types/webview_console_message_event/#flet_webview.types.WebViewConsoleMessageEvent.severity_level","title":"severity_level","text":"<pre><code>severity_level: LogLevelSeverity\n</code></pre> <p>The severity of a JavaScript log message.</p>"},{"location":"types/webview_console_message_event/#flet_webview.types.WebViewConsoleMessageEvent.target","title":"target","text":"<pre><code>target: int\n</code></pre>"},{"location":"types/webview_javascript_event/","title":"WebviewJavaScriptEvent","text":""},{"location":"types/webview_javascript_event/#flet_webview.types.WebViewJavaScriptEvent","title":"WebViewJavaScriptEvent","text":"<p>               Bases: <code>Event['WebView']</code></p>"},{"location":"types/webview_javascript_event/#flet_webview.types.WebViewJavaScriptEvent.control","title":"control","text":"<pre><code>control: EventControlType = field(repr=False)\n</code></pre>"},{"location":"types/webview_javascript_event/#flet_webview.types.WebViewJavaScriptEvent.data","title":"data","text":"<pre><code>data: Any | None = field(default=None, kw_only=True)\n</code></pre>"},{"location":"types/webview_javascript_event/#flet_webview.types.WebViewJavaScriptEvent.message","title":"message","text":"<pre><code>message: str\n</code></pre> <p>The message to be displayed in the window.</p>"},{"location":"types/webview_javascript_event/#flet_webview.types.WebViewJavaScriptEvent.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"types/webview_javascript_event/#flet_webview.types.WebViewJavaScriptEvent.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre>"},{"location":"types/webview_javascript_event/#flet_webview.types.WebViewJavaScriptEvent.target","title":"target","text":"<pre><code>target: int\n</code></pre>"},{"location":"types/webview_javascript_event/#flet_webview.types.WebViewJavaScriptEvent.url","title":"url","text":"<pre><code>url: str\n</code></pre> <p>The URL of the page requesting the dialog.</p>"},{"location":"types/webview_scroll_event/","title":"WebviewScrollEvent","text":""},{"location":"types/webview_scroll_event/#flet_webview.types.WebViewScrollEvent","title":"WebViewScrollEvent","text":"<p>               Bases: <code>Event['WebView']</code></p>"},{"location":"types/webview_scroll_event/#flet_webview.types.WebViewScrollEvent.control","title":"control","text":"<pre><code>control: EventControlType = field(repr=False)\n</code></pre>"},{"location":"types/webview_scroll_event/#flet_webview.types.WebViewScrollEvent.data","title":"data","text":"<pre><code>data: Any | None = field(default=None, kw_only=True)\n</code></pre>"},{"location":"types/webview_scroll_event/#flet_webview.types.WebViewScrollEvent.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"types/webview_scroll_event/#flet_webview.types.WebViewScrollEvent.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre>"},{"location":"types/webview_scroll_event/#flet_webview.types.WebViewScrollEvent.target","title":"target","text":"<pre><code>target: int\n</code></pre>"},{"location":"types/webview_scroll_event/#flet_webview.types.WebViewScrollEvent.x","title":"x","text":"<pre><code>x: float\n</code></pre> <p>The value of the horizontal offset with the origin being at the leftmost of the <code>WebView</code>.</p>"},{"location":"types/webview_scroll_event/#flet_webview.types.WebViewScrollEvent.y","title":"y","text":"<pre><code>y: float\n</code></pre> <p>The value of the vertical offset with the origin being at the topmost of the <code>WebView</code>.</p>"}]}